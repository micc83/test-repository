# Organization
# Team Voyager
apiVersion: backstage.io/v1alpha1
kind: Group
metadata:
  name: team-voyager
  title: Team Voyager
spec:
  type: team
  children: []
---
# Team Buktu
apiVersion: backstage.io/v1alpha1
kind: Group
metadata:
  name: team-buktu
  title: Team Buktu
spec:
  type: team
  children: []
---
# Team BI
apiVersion: backstage.io/v1alpha1
kind: Group
metadata:
  name: team-bi
  title: BI
spec:
  type: team
  children: []
---
# Team Devops
apiVersion: backstage.io/v1alpha1
kind: Group
metadata:
  name: team-devops
  title: DevOps
spec:
  type: team
  children: []
---
# Systems
apiVersion: backstage.io/v1alpha1
kind: System
metadata:
  name: documentary
  title: Documentary
  description: Handles documents upload/download and validation
spec:
  owner: team-voyager
---
# Systems
apiVersion: backstage.io/v1alpha1
kind: System
metadata:
  name: bookings
  title: Bookings
  description: Handle the bookings
spec:
  owner: team-buktu
---
#Â Service 1
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: my-example-service
  title: Documentary Backend
  description: Service to handle documents upload/download and validation
  annotations:
    github.com/project-slug: micc83/test-repository
    backstage.io/techdocs-ref: dir:.
    sentry.io/project-slug: value
  tags:
    - php
  links:
    - url: https://api.service-1.com
      title: Service host
      type: backend
spec:
  type: service
  lifecycle: production
  owner: team-voyager
  system: documentary
  providesApis:
    - custom-api
    - my-custom-async-api
  dependsOn:
    - resource:google-big-query
    - resource:postgresql
---
# Service 2
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: another-example-service
  title: Bookings Backend
  description: A service that does this and that
  tags:
    - node
    - nestjs
  links:
    - url: https://api.service-2.com
      title: Service host
      type: backend
spec:
  type: service
  lifecycle: production
  owner: team-buktu
  system: bookings
  consumesApis:
    - my-custom-async-api
  providesApis:
    - my-graphql-api
  dependsOn:
    - resource:postgresql
---
# OpenAPI from service 1
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: custom-api
  title: Documentary REST API
  description: Retrieve pets
spec:
  type: openapi
  lifecycle: production
  owner: team-voyager
  definition:
    $text: ./schema.yml
---
# AsyncAPI from service 1
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: my-custom-async-api
  title: Documentary RMQ
  description: RMQ messages
spec:
  type: asyncapi
  lifecycle: production
  owner: team-voyager
  definition:
    $text: ./asyncapi.yml
---
# GraphQL API from service 2
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: my-graphql-api
  title: Bookings GraphQL API
  description: GraphQL API
spec:
  type: graphql
  lifecycle: production
  owner: team-buktu
  definition:
    $text: ./schema.graphql
---
# Website consuming API from Service 1
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: my-example-website
  title: Documentary Admin
  description: My example website
  links:
    - url: https://admin.example-org.com
      title: Admin Dashboard
      icon: dashboard
      type: admin-dashboard
spec:
  type: website
  lifecycle: production
  owner: team-voyager
  system: documentary
  consumesApis: 
    - custom-api
  dependsOn:
    - component:my-example-service
---
# Website consuming my-graphql-api
apiVersion: backstage.io/v1alpha1
kind: Component
metadata:
  name: booking-checkout
  title: Booking Checkout Page
  description: Booking Checkout Page
  links:
    - url: https://checkout.example-org.com
      title: Cart page
spec:
  type: website
  lifecycle: production
  owner: team-buktu
  system: bookings
  consumesApis: 
    - my-graphql-api
  dependsOn:
    - component:another-example-service
---
# BigQuery
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: google-big-query
  title: Google BigQuery
  description: Stores BIG DATA
spec:
  type: database
  owner: team-bi
---
# Postgres
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: postgresql
  title: PostgreSQL
  description: Stores all databases
spec:
  type: database
  owner: team-devops
